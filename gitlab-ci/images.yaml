.imagejob:
  image: docker:latest
  stage: build
  services:
  - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: "overlay2"
    BUILDX_VERSION: "v0.6.3"
    image: "${CI_REGISTRY_IMAGE}/${service}"
    tag: "${CI_COMMIT_REF_SLUG}"
  before_script:
  # install docker's buildx plugin
  - srcurl="https://github.com/docker/buildx/releases/download/${BUILDX_VERSION}/buildx-${BUILDX_VERSION}.linux-amd64"
  - dstdir="${HOME}/.docker/cli-plugins"
  - mkdir -p "${dstdir}"
  - wget -O "${dstdir}/docker-buildx" "${srcurl}"
  - chmod a+x "${dstdir}/docker-buildx"
  - unset srcurl dstdir
  # prepare build environment
  - docker info
  - echo "${CI_REGISTRY_PASSWORD}" | docker login --password-stdin -u "${CI_REGISTRY_USER}" "${CI_REGISTRY}"
  - docker context create eaasi
  - docker buildx create --name eaasi --driver docker-container --use eaasi
  - docker buildx inspect --bootstrap eaasi
  #- is_latest() { test "${CI_COMMIT_REF_SLUG}" = "${CI_DEFAULT_BRANCH}"; }
  - is_latest() { true; }
  script:
  # optionally, load image into local docker instance
  - if is_latest; then aliases="--tag ${image}:latest"; fi
  # build and push image, export all intermediate layers as cache
  - docker buildx build --progress plain --output 'type=registry'
        --cache-to "type=registry,mode=max,ref=${image}:buildcache"
        --cache-from "type=registry,ref=${image}:buildcache"
        --tag "${image}:${tag}" ${aliases} "${workdir}"

database-image:
  extends: ".imagejob"
  variables:
    service: "eaasi-database"
    workdir: "./eaasi-database"

#front-end-image:
#  extends: ".imagejob"
#  variables:
#    GIT_SUBMODULE_STRATEGY: "recursive"
#    service: "eaasi-front-end"
#    workdir: "."

#web-api-image:
#  extends: ".imagejob"
#  variables:
#    service: "eaasi-web-api"
#    workdir: "./eaasi-web-api"

start-env:
  image: alpine:latest
  stage: cleanup
  environment:
    name: "docker/${CI_COMMIT_REF_SLUG}"
    on_stop: cleanup
  variables:
    GIT_STRATEGY: "none"
  script:
  - exit 0

cleanup:
  image: alpine:latest
  stage: cleanup
  when: manual
  environment:
    name: "docker/${CI_COMMIT_REF_SLUG}"
    action: stop
  variables:
    GIT_STRATEGY: "none"
  before_script:
  - outfile="/usr/local/bin/reg"
  - wget -O "${outfile}" "https://github.com/genuinetools/reg/releases/download/v0.16.1/reg-linux-amd64"
  - echo "ade837fc5224acd8c34732bf54a94f579b47851cc6a7fd5899a98386b782e228  ${outfile}" | sha256sum -c -
  - chmod a+x "${outfile}"
  - unset outfile
  script:
  - | # delete docker image for given service and tag
    delete_docker_image() {
      local service="$1"
      local tag="$2"
      local image="${CI_REGISTRY_IMAGE}/${service}"
      echo "Deleting image '${image}:${tag}'..."
      reg rm --auth-url "${CI_REGISTRY}" -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${image}:${tag}"
      echo ""
    }
  - | # delete docker images for current branch
    for service in eaasi-database eaasi-front-end eaasi-web-api; do
      delete_docker_image "${service}" "${CI_COMMIT_REF_SLUG}" || true
    done
