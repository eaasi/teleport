# image: cypress/base:10
image: node:latest

before_script:
    # Install ssh-agent
    - echo '========= Starting Deploy Stage ========='
    - echo "$CI_COMMIT_REF_NAME"
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    # Run ssh-agent in the build environment
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$BUILD_AGENT_PRIVATE_KEY" | base64 -d)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    # Add git user
    - git config --global user.email "andrii@portalmedia.com"
    - git config --global user.name "Andrii"


stages:
    - build
    - test
    - deploy

cache:
    paths:
        - .eaasi-web-api/node_modules/
        - .eaasi-front-end/node_modules/

build:front-end:
    stage: build
    script:
        - cd ./eaasi-front-end
        - npm install
        - npm run build
    only:
        - merge_requests

build:api:
    stage: build
    script:
        - cd ./eaasi-web-api
        - npm install
        - npm install -g babel-cli
        - npm run build
    only:
        - merge_requests

test:front-end:
    stage: test
    dependencies:
        - build:front-end
    script:
        - cd ./eaasi-front-end
        - npm install -g jest
        - npm install
        - npm run test:unit
    only:
        - merge_requests

test:api:
    stage: test
    dependencies:
        - build:api
    script:
        - cd ./eaasi-web-api
        - npm install -g jest
        - npm install
        - jest --verbose --detectOpenHandles --logHeapUsage --coverage
    only:
        - merge_requests

deploy:all:
    stage: deploy
    script:
        - ssh portalmedia@eaasi.portalmedia.com -tt -p "$SSH_PORT" \
              "cd ~/eaasi/portal && sudo git stash && sudo git pull origin master && sudo git stash pop && sudo docker container stop eaasi-web-api eaasi-front-end eaasi-database eaasi-nginx && sudo docker container rm eaasi-web-api eaasi-front-end eaasi-database eaasi-nginx && sudo docker-compose up --build -d --no-deps --force-recreate eaasi-web-api eaasi-front-end eaasi-nginx eaasi-database && exit" 
    only:
        - staging
